{"version":3,"sources":["redux/data/dataActions.js","redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","App.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","NFTUris.js","reportWebVitals.js","index.js"],"names":["fetchDataFailed","payload","type","fetchData","account","dispatch","a","store","getState","blockchain","smartContract","methods","name","call","console","log","initialState","loading","web3","errorMsg","blockchainReducer","state","action","error","dataReducer","rootReducer","combineReducers","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","createStore","NFTUris","require","StyledButton","styled","button","ipfsClient","create","App","useState","setName","description","setDescription","image","setImage","setLoading","status","setStatus","metadatCreation","setMetadataCreation","mintCount","setMintCount","useDispatch","useSelector","ipfsBaseUrl","useEffect","createMetadata","toDataURL","useBuffer","err","imageUri","add","addedImage","metaDataObj","path","attributes","trait_type","value","Math","floor","random","JSON","stringify","addedMetadata","tokenUri","mint","GetAllExistingTokens","then","receipt","existingUri","map","uri","length","includes","CreateCollectible","send","from","Web3","utils","toWei","once","catch","url","callback","xhr","XMLHttpRequest","open","responseType","onload","fr","FileReader","buffer","Buffer","this","result","split","readAsDataURL","response","flex","ai","jc","onClick","e","preventDefault","connect","style","padding","textAlign","i","parseInt","Initiatemint","onChange","target","onSubmit","event","src","files","img","URL","createObjectURL","connectFailed","window","ethereum","request","method","accounts","networkId","SmartContract","networks","SmartContractObj","eth","Contract","abi","on","updateAccount","location","reload","Screen","div","SpacerSmall","SpacerLarge","Container","fd","test","TextTitle","p","TextDescription","module","exports","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"iMAeMA,EAAkB,SAACC,GACvB,MAAO,CACLC,KAAM,oBACND,QAASA,IAIAE,EAAY,SAACC,GACxB,8CAAO,WAAOC,GAAP,eAAAC,EAAA,6DACLD,EArBK,CACLH,KAAM,uBAmBD,kBAGcK,IACdC,WACAC,WAAWC,cAAcC,QAAQC,OACjCC,OANA,OAGCD,EAHD,OAQHP,EAtBG,CACLH,KAAM,qBACND,QAqBqB,CACfW,UAVD,gDAcHE,QAAQC,IAAR,MACAV,EAASL,EAAgB,uCAftB,yDAAP,wD,8DCvBIgB,EAAe,CACnBC,SAAS,EACTb,QAAS,KACTM,cAAe,KACfQ,KAAM,KACNC,SAAU,IAkCGC,EA/BW,WAAmC,IAAlCC,EAAiC,uDAAzBL,EAAcM,EAAW,uCAC1D,OAAQA,EAAOpB,MACb,IAAK,qBACH,OAAO,2BACFc,GADL,IAEEC,SAAS,IAEb,IAAK,qBACH,OAAO,2BACFI,GADL,IAEEJ,SAAS,EACTb,QAASkB,EAAOrB,QAAQG,QACxBM,cAAeY,EAAOrB,QAAQS,cAC9BQ,KAAMI,EAAOrB,QAAQiB,OAEzB,IAAK,oBACH,OAAO,2BACFF,GADL,IAEEC,SAAS,EACTE,SAAUG,EAAOrB,UAErB,IAAK,iBACH,OAAO,2BACFoB,GADL,IAEEjB,QAASkB,EAAOrB,QAAQG,UAE5B,QACE,OAAOiB,ICnCPL,EAAe,CACnBC,SAAS,EACTL,KAAM,GACNW,OAAO,EACPJ,SAAU,IA4BGK,EAzBK,WAAmC,IAAlCH,EAAiC,uDAAzBL,EAAcM,EAAW,uCACpD,OAAQA,EAAOpB,MACb,IAAK,qBACH,OAAO,2BACFc,GADL,IAEEC,SAAS,IAEb,IAAK,qBACH,OAAO,2BACFD,GADL,IAEEC,SAAS,EACTL,KAAMU,EAAOrB,QAAQW,OAEzB,IAAK,oBACH,OAAO,2BACFI,GADL,IAEEC,SAAS,EACTM,OAAO,EACPJ,SAAUG,EAAOrB,UAErB,QACE,OAAOoB,ICvBPI,EAAcC,YAAgB,CAClCjB,WAAYW,EACZO,KAAMH,IAGFI,EAAa,CAACC,KACdC,EAAmBC,YAAQC,IAAe,WAAf,EAAmBJ,IAM9CrB,EAHG0B,YAAYR,EAAaK,GAKnBvB,O,o1wUCXP2B,EAAYC,EAAQ,KAApBD,QAEKE,EAAeC,IAAOC,OAAV,6CAGnBC,EAAaC,iBAAO,sCAkPXC,IAhPf,WACE,MAAwBC,mBAAS,IAAjC,mBAAO9B,EAAP,KAAa+B,EAAb,KACA,EAAsCD,mBAAS,IAA/C,mBAAOE,EAAP,KAAoBC,EAApB,KACA,EAA0BH,mBAAS,IAAnC,mBAAOI,EAAP,KAAcC,EAAd,KACA,EAA8BL,oBAAS,GAAvC,mBAAOzB,EAAP,KAAgB+B,EAAhB,KACA,EAA4BN,mBAAS,IAArC,mBAAOO,EAAP,KAAeC,EAAf,KACA,EAA+CR,oBAAS,GAAxD,mBAAOS,EAAP,KAAwBC,EAAxB,KACA,EAAkCV,mBAAS,KAA3C,mBAAOW,EAAP,KAAkBC,EAAlB,KAEMjD,EAAWkD,cACX9C,EAAa+C,aAAY,SAACnC,GAAD,OAAWA,EAAMZ,cAC1CgD,EAAc,+BAEpBC,qBAAU,WACmB,KAAvBjD,EAAWL,SAA+C,OAA7BK,EAAWC,eAC1CL,EAASF,YAAUM,EAAWL,YAE/B,CAACK,EAAWC,cAAeL,IAE9B,IAAMsD,EAAiB,WACrB,IACEX,GAAW,GACXE,EAAU,qBAtBD,sCAuBTU,CAAUd,EAAOe,GACjB,MAAOC,GACPd,GAAW,GACXE,EAAU,WAGRW,EAAS,uCAAG,WAAOE,GAAP,qBAAAzD,EAAA,sEACSiC,EAAWyB,IAAID,GADxB,cACVE,EADU,OAEVC,EAAc,CAClBtD,KAAMA,EACNgC,YAAaA,EACbE,MAAOW,EAAcQ,EAAWE,KAChCC,WAAY,CACV,CACEC,WAAY,UACZC,MAAOC,KAAKC,MAAM,EAAI,IAAAD,KAAKE,WAE7B,CACEJ,WAAY,WACZC,MAAOC,KAAKC,MAAM,EAAI,IAAAD,KAAKE,WAE7B,CACEJ,WAAY,eACZC,MAAOC,KAAKC,MAAM,EAAI,IAAAD,KAAKE,aAjBjB,SAqBYlC,EAAWyB,IAAIU,KAAKC,UAAUT,IArB1C,OAqBVU,EArBU,OAsBVC,EAAWpB,EAAcmB,EAAcT,KAC7CrD,QAAQC,IAAI8D,GAvBI,2CAAH,sDAgCTC,EAAO,WACX,IACE9B,GAAW,GACXE,EAAU,yBACVzC,EAAWC,cAAcC,QACtBoE,uBACAlE,OACAmE,MAAK,SAACC,GACL,IAAIC,EAAcD,EAAQE,KAAI,SAAC7E,GAAD,OAAOA,EAAE8E,OACvC,GAAIF,EAAYG,QAAU,GAGxB,OAFArC,GAAW,QACXE,EAAU,8BAIZ,IADA,IAAIkC,EAAMlD,EAAQqC,KAAKC,MAAsB,GAAhBD,KAAKE,WAC3BS,EAAYI,SAASF,IAC1BA,EAAMlD,EAAQqC,KAAKC,MAAsB,GAAhBD,KAAKE,WAEhChE,EAAWC,cAAcC,QACtB4E,kBAAkB9E,EAAWL,QAASgF,GACtCI,KAAK,CACJC,KAAMhF,EAAWL,QACjBkE,MAAOoB,IAAKC,MAAMC,MAAM,OAAQ,WAEjCC,KAAK,SAAS,SAAC/B,GACdd,GAAW,GACXE,EAAU,2BAEX8B,MAAK,SAACC,GACLjC,GAAW,GACXE,EAAU,cAEX4C,OAAM,SAAChC,GAAD,OAAShD,QAAQC,IAAI+C,SAElC,MAAOvC,GACPyB,GAAW,GACXE,EAAU3B,KAjGD,4CAqGb,WAAyBwE,EAAKC,GAA9B,eAAA1F,EAAA,uDACM2F,EAAM,IAAIC,gBACVC,KAAK,MAAOJ,GAChBE,EAAIG,aAAe,OACnBH,EAAII,OAAS,WACX,IAAIC,EAAK,IAAIC,WAEbD,EAAGD,OAAS,WACV,IAAMG,EAASC,EAAOC,KAAKC,OAAOC,MAAM,KAAK,GAAI,UACjDZ,EAASQ,IAGXF,EAAGO,cAAcZ,EAAIa,WAGvBb,EAAIT,OAfN,4CArGa,sBAuHb,OACE,cAAC,IAAD,UAC0B,KAAvB/E,EAAWL,SAA+C,OAA7BK,EAAWC,cACvC,eAAC,IAAD,CAAaqG,KAAM,EAAGC,GAAI,SAAUC,GAAI,SAAxC,UACE,cAAC,IAAD,wCACA,cAAC,IAAD,IACA,cAAC7E,EAAD,CACE8E,QAAS,SAACC,GACRA,EAAEC,iBACF/G,EAASgH,gBAHb,qBAQA,cAAC,IAAD,IACyB,KAAxB5G,EAAWU,SACV,cAAC,IAAD,UAAoBV,EAAWU,WAC7B,QAGN,eAAC,IAAD,CAAa4F,KAAM,EAAGC,GAAI,SAAUM,MAAO,CAAEC,QAAS,IAAtD,UACE,cAAC,IAAD,CAAaD,MAAO,CAAEE,UAAW,UAAjC,8BAGCvG,EACC,qCACE,cAAC,IAAD,IACA,cAAC,IAAD,CAAmBqG,MAAO,CAAEE,UAAW,UAAvC,4BAIA,KACQ,KAAXvE,EACC,qCACE,cAAC,IAAD,IACA,cAAC,IAAD,CAAmBqE,MAAO,CAAEE,UAAW,UAAvC,SACGvE,OAGH,KACJ,cAAC,IAAD,IACA,cAACb,EAAD,CACE8E,QAAS,SAACC,GACRA,EAAEC,iBA3GO,WACnB,IAAK,IAAIK,EAAI,EAAGA,EAAIC,SAASrE,GAAYoE,IACvC3C,IA0GQ6C,IAHJ,kBAQA,yBACErD,MAAOjB,EACPuE,SAAU,SAACT,GACT7D,EAAa6D,EAAEU,OAAOvD,QAH1B,UAME,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,kBAEF,cAAC,IAAD,IACA,cAAClC,EAAD,CACE8E,QAAS,SAACC,GACRA,EAAEC,iBACFhE,GAAqBD,IAHzB,8CAQA,cAAC,IAAD,KACqB,IAApBA,EACC,mCACE,uBACE2E,SAAU,SAACC,GACTA,EAAMX,iBACNzD,KAHJ,UAME,0CAEE,uBACEzD,KAAK,OACLoE,MAAO1D,EACPgH,SAAU,SAACG,GACTpF,EAAQoF,EAAMF,OAAOvD,QAEvB1D,KAAK,YAGT,iDAEE,uBACEV,KAAK,OACLoE,MAAO1B,EACPgF,SAAU,SAACG,GACTlF,EAAekF,EAAMF,OAAOvD,QAE9B1D,KAAK,mBAGT,qBAAKoH,IAAKlF,IACV,8CACA,uBACE5C,KAAK,OACLU,KAAK,UACLgH,SAAU,SAACG,GACT,GAAIA,EAAMF,OAAOI,OAASF,EAAMF,OAAOI,MAAM,GAAI,CAC/C,IAAIC,EAAMH,EAAMF,OAAOI,MAAM,GAC7BlF,EAASoF,IAAIC,gBAAgBF,QAInC,uBAAOhI,KAAK,SAASoE,MAAM,yBAG7B,a,2JCvOR+D,EAAgB,SAACpI,GACrB,MAAO,CACLC,KAAM,oBACND,QAASA,IAWAoH,EAAU,WACrB,8CAAO,WAAOhH,GAAP,qBAAAC,EAAA,yDACLD,EA5BK,CACLH,KAAM,wBA4BFoI,OAAOC,SAFN,wBAGCrH,EAAO,IAAIwE,IAAK4C,OAAOC,UAHxB,kBAKsBD,OAAOC,SAASC,QAAQ,CAC7CC,OAAQ,wBANT,cAKKC,EALL,gBAQuBJ,OAAOC,SAASC,QAAQ,CAC9CC,OAAQ,gBATT,OAQKE,EARL,OAWD7H,QAAQC,IAAI2H,EAAUC,EAAWC,EAAcC,UAC9B,GAAbF,GAEIG,EAAmB,IAAI5H,EAAK6H,IAAIC,SACpCJ,EAAcK,IACd,8CAEF5I,EAvCD,CACLH,KAAM,qBACND,QAsCuB,CACbG,QAASsI,EAAS,GAClBhI,cAAeoI,EACf5H,KAAMA,KAGVoH,OAAOC,SAASW,GAAG,mBAAmB,SAACR,GACrCrI,EAAS8I,EAAcT,EAAS,QAElCJ,OAAOC,SAASW,GAAG,gBAAgB,WACjCZ,OAAOc,SAASC,aAGlBhJ,EAASgI,EAAc,+BAhCxB,kDAmCDhI,EAASgI,EAAc,0BAnCtB,gCAsCHhI,EAASgI,EAAc,sBAtCpB,0DAAP,uDA2CWc,EAAgB,SAAC/I,GAC5B,8CAAO,WAAOC,GAAP,SAAAC,EAAA,sDACLD,EApDK,CACLH,KAAM,iBACND,QAkD8B,CAAEG,QAASA,KACzCC,EAASF,YAAUC,IAFd,2CAAP,wD,oRCzEWkJ,EAASjH,IAAOkH,IAAV,2OAEG,gBAAGzG,EAAH,EAAGA,MAAH,OAAgBA,EAAK,cAAUA,EAAV,KAAqB,UAgBnD0G,GANenH,IAAOkH,IAAV,2DAMElH,IAAOkH,IAAV,8DAYXE,GANepH,IAAOkH,IAAV,6DAMElH,IAAOkH,IAAV,8DAMXG,EAAYrH,IAAOkH,IAAV,iQAEZ,gBAAGxC,EAAH,EAAGA,KAAH,OAAeA,GAAc,KACnB,gBAAG4C,EAAH,EAAGA,GAAH,OAAaA,GAAU,YACtB,gBAAG1C,EAAH,EAAGA,GAAH,OAAaA,GAAU,gBAC3B,gBAAGD,EAAH,EAAGA,GAAH,OAAaA,GAAU,gBAClB,qBAAG4C,KAAmB,OAAS,UAE/B,gBAAG9G,EAAH,EAAGA,MAAH,OAAgBA,EAAK,cAAUA,EAAV,KAAqB,UAKnD+G,EAAYxH,IAAOyH,EAAV,6FAYTC,GANe1H,IAAOyH,EAAV,6FAMMzH,IAAOyH,EAAV,8FAMGzH,IAAOkH,IAAV,kE,kfCtC5BS,EAAOC,QAAU,CAAE/H,QAhCL,CACZ,6EACA,6EACA,6EACA,6EACA,6EACA,6EACA,6EACA,6EACA,6EACA,6EACA,6EACA,6EACA,6EACA,6EACA,6EACA,6EACA,6EACA,6EACA,6EACA,6EACA,6EACA,6EACA,6EACA,6EACA,6EACA,6EACA,6EACA,6EACA,6EACA,gF,wHClBagI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBpF,MAAK,YAAkD,IAA/CqF,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,yCCEdO,IAASC,OACP,cAAC,IAAD,CAAUpK,MAAOA,IAAjB,SACE,cAACkC,EAAA,EAAD,MAEFmI,SAASC,eAAe,SAM1BX,M","file":"static/js/main.2df2bbc9.chunk.js","sourcesContent":["import store from '../store'\r\n\r\nconst fetchDataRequest = () => {\r\n  return {\r\n    type: 'CHECK_DATA_REQUEST',\r\n  }\r\n}\r\n\r\nconst fetchDataSuccess = (payload) => {\r\n  return {\r\n    type: 'CHECK_DATA_SUCCESS',\r\n    payload: payload,\r\n  }\r\n}\r\n\r\nconst fetchDataFailed = (payload) => {\r\n  return {\r\n    type: 'CHECK_DATA_FAILED',\r\n    payload: payload,\r\n  }\r\n}\r\n\r\nexport const fetchData = (account) => {\r\n  return async (dispatch) => {\r\n    dispatch(fetchDataRequest())\r\n    try {\r\n      let name = await store\r\n        .getState()\r\n        .blockchain.smartContract.methods.name()\r\n        .call()\r\n\r\n      dispatch(\r\n        fetchDataSuccess({\r\n          name,\r\n        }),\r\n      )\r\n    } catch (err) {\r\n      console.log(err)\r\n      dispatch(fetchDataFailed('Could not load data from contract.'))\r\n    }\r\n  }\r\n}\r\n","const initialState = {\r\n  loading: false,\r\n  account: null,\r\n  smartContract: null,\r\n  web3: null,\r\n  errorMsg: \"\",\r\n};\r\n\r\nconst blockchainReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CONNECTION_REQUEST\":\r\n      return {\r\n        ...initialState,\r\n        loading: true,\r\n      };\r\n    case \"CONNECTION_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        account: action.payload.account,\r\n        smartContract: action.payload.smartContract,\r\n        web3: action.payload.web3,\r\n      };\r\n    case \"CONNECTION_FAILED\":\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        errorMsg: action.payload,\r\n      };\r\n    case \"UPDATE_ACCOUNT\":\r\n      return {\r\n        ...state,\r\n        account: action.payload.account,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default blockchainReducer;\r\n","const initialState = {\r\n  loading: false,\r\n  name: \"\",\r\n  error: false,\r\n  errorMsg: \"\",\r\n};\r\n\r\nconst dataReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CHECK_DATA_REQUEST\":\r\n      return {\r\n        ...initialState,\r\n        loading: true,\r\n      };\r\n    case \"CHECK_DATA_SUCCESS\":\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        name: action.payload.name,\r\n      };\r\n    case \"CHECK_DATA_FAILED\":\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        error: true,\r\n        errorMsg: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default dataReducer;\r\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\r\nimport dataReducer from \"./data/dataReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  blockchain: blockchainReducer,\r\n  data: dataReducer,\r\n});\r\n\r\nconst middleware = [thunk];\r\nconst composeEnhancers = compose(applyMiddleware(...middleware));\r\n\r\nconst configureStore = () => {\r\n  return createStore(rootReducer, composeEnhancers);\r\n};\r\n\r\nconst store = configureStore();\r\n\r\nexport default store;\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { connect } from './redux/blockchain/blockchainActions'\r\nimport { fetchData } from './redux/data/dataActions'\r\nimport * as s from './styles/globalStyles'\r\nimport styled from 'styled-components'\r\nimport { create } from 'ipfs-http-client'\r\nimport Web3 from 'web3'\r\nconst { NFTUris } = require('./NFTUris.js')\r\n\r\nexport const StyledButton = styled.button`\r\n  padding: 8px;\r\n`\r\nconst ipfsClient = create('https://ipfs.infura.io:5001/api/v0')\r\n\r\nfunction App() {\r\n  const [name, setName] = useState('')\r\n  const [description, setDescription] = useState('')\r\n  const [image, setImage] = useState('')\r\n  const [loading, setLoading] = useState(false)\r\n  const [status, setStatus] = useState('')\r\n  const [metadatCreation, setMetadataCreation] = useState(false)\r\n  const [mintCount, setMintCount] = useState('1')\r\n\r\n  const dispatch = useDispatch()\r\n  const blockchain = useSelector((state) => state.blockchain)\r\n  const ipfsBaseUrl = 'https://ipfs.infura.io/ipfs/'\r\n\r\n  useEffect(() => {\r\n    if (blockchain.account !== '' && blockchain.smartContract !== null) {\r\n      dispatch(fetchData(blockchain.account))\r\n    }\r\n  }, [blockchain.smartContract, dispatch])\r\n\r\n  const createMetadata = () => {\r\n    try {\r\n      setLoading(true)\r\n      setStatus('Creating Metadata')\r\n      toDataURL(image, useBuffer)\r\n    } catch (err) {\r\n      setLoading(false)\r\n      setStatus('Error')\r\n    }\r\n  }\r\n  const useBuffer = async (imageUri) => {\r\n    const addedImage = await ipfsClient.add(imageUri)\r\n    const metaDataObj = {\r\n      name: name,\r\n      description: description,\r\n      image: ipfsBaseUrl + addedImage.path,\r\n      attributes: [\r\n        {\r\n          trait_type: 'Agility',\r\n          value: Math.floor(1 + Math.random() * (250 - 1)),\r\n        },\r\n        {\r\n          trait_type: 'Strength',\r\n          value: Math.floor(1 + Math.random() * (250 - 1)),\r\n        },\r\n        {\r\n          trait_type: 'Intelligence',\r\n          value: Math.floor(1 + Math.random() * (250 - 1)),\r\n        },\r\n      ],\r\n    }\r\n    const addedMetadata = await ipfsClient.add(JSON.stringify(metaDataObj))\r\n    const tokenUri = ipfsBaseUrl + addedMetadata.path\r\n    console.log(tokenUri)\r\n  }\r\n\r\n  const Initiatemint = () => {\r\n    for (var i = 0; i < parseInt(mintCount); i++) {\r\n      mint()\r\n    }\r\n  }\r\n\r\n  const mint = () => {\r\n    try {\r\n      setLoading(true)\r\n      setStatus('Begun minting process')\r\n      blockchain.smartContract.methods\r\n        .GetAllExistingTokens()\r\n        .call()\r\n        .then((receipt) => {\r\n          let existingUri = receipt.map((a) => a.uri)\r\n          if (existingUri.length >= 30) {\r\n            setLoading(false)\r\n            setStatus('All possible Tokens minted')\r\n            return\r\n          }\r\n          var uri = NFTUris[Math.floor(Math.random() * 30)]\r\n          while (existingUri.includes(uri)) {\r\n            uri = NFTUris[Math.floor(Math.random() * 30)]\r\n          }\r\n          blockchain.smartContract.methods\r\n            .CreateCollectible(blockchain.account, uri)\r\n            .send({\r\n              from: blockchain.account,\r\n              value: Web3.utils.toWei('0.07', 'ether'),\r\n            })\r\n            .once('error', (err) => {\r\n              setLoading(false)\r\n              setStatus('Transaction rejected')\r\n            })\r\n            .then((receipt) => {\r\n              setLoading(false)\r\n              setStatus('Success')\r\n            })\r\n            .catch((err) => console.log(err))\r\n        })\r\n    } catch (error) {\r\n      setLoading(false)\r\n      setStatus(error)\r\n    }\r\n  }\r\n\r\n  async function toDataURL(url, callback) {\r\n    var xhr = new XMLHttpRequest()\r\n    xhr.open('get', url)\r\n    xhr.responseType = 'blob'\r\n    xhr.onload = function () {\r\n      var fr = new FileReader()\r\n\r\n      fr.onload = function () {\r\n        const buffer = Buffer(this.result.split(',')[1], 'base64')\r\n        callback(buffer)\r\n      }\r\n\r\n      fr.readAsDataURL(xhr.response) // async call\r\n    }\r\n\r\n    xhr.send()\r\n  }\r\n\r\n  return (\r\n    <s.Screen>\r\n      {blockchain.account === '' || blockchain.smartContract === null ? (\r\n        <s.Container flex={1} ai={'center'} jc={'center'}>\r\n          <s.TextTitle>Connect to the Blockchain</s.TextTitle>\r\n          <s.SpacerSmall />\r\n          <StyledButton\r\n            onClick={(e) => {\r\n              e.preventDefault()\r\n              dispatch(connect())\r\n            }}\r\n          >\r\n            CONNECT\r\n          </StyledButton>\r\n          <s.SpacerSmall />\r\n          {blockchain.errorMsg !== '' ? (\r\n            <s.TextDescription>{blockchain.errorMsg}</s.TextDescription>\r\n          ) : null}\r\n        </s.Container>\r\n      ) : (\r\n        <s.Container flex={1} ai={'center'} style={{ padding: 24 }}>\r\n          <s.TextTitle style={{ textAlign: 'center' }}>\r\n            Welcome to Altar\r\n          </s.TextTitle>\r\n          {loading ? (\r\n            <>\r\n              <s.SpacerSmall />\r\n              <s.TextDescription style={{ textAlign: 'center' }}>\r\n                Loading....\r\n              </s.TextDescription>\r\n            </>\r\n          ) : null}\r\n          {status !== '' ? (\r\n            <>\r\n              <s.SpacerSmall />\r\n              <s.TextDescription style={{ textAlign: 'center' }}>\r\n                {status}\r\n              </s.TextDescription>\r\n            </>\r\n          ) : null}\r\n          <s.SpacerLarge />\r\n          <StyledButton\r\n            onClick={(e) => {\r\n              e.preventDefault()\r\n              Initiatemint()\r\n            }}\r\n          >\r\n            MINT\r\n          </StyledButton>\r\n          <select\r\n            value={mintCount}\r\n            onChange={(e) => {\r\n              setMintCount(e.target.value)\r\n            }}\r\n          >\r\n            <option value=\"1\">1</option>\r\n            <option value=\"2\">2</option>\r\n            <option value=\"3\">3</option>\r\n          </select>\r\n          <s.SpacerLarge />\r\n          <StyledButton\r\n            onClick={(e) => {\r\n              e.preventDefault()\r\n              setMetadataCreation(!metadatCreation)\r\n            }}\r\n          >\r\n            Enable/Disable Metadata Creation\r\n          </StyledButton>\r\n          <s.SpacerLarge />\r\n          {metadatCreation !== false ? (\r\n            <>\r\n              <form\r\n                onSubmit={(event) => {\r\n                  event.preventDefault()\r\n                  createMetadata()\r\n                }}\r\n              >\r\n                <label>\r\n                  Name:\r\n                  <input\r\n                    type=\"text\"\r\n                    value={name}\r\n                    onChange={(event) => {\r\n                      setName(event.target.value)\r\n                    }}\r\n                    name=\"name\"\r\n                  />\r\n                </label>\r\n                <label>\r\n                  Description:\r\n                  <input\r\n                    type=\"text\"\r\n                    value={description}\r\n                    onChange={(event) => {\r\n                      setDescription(event.target.value)\r\n                    }}\r\n                    name=\"description\"\r\n                  />\r\n                </label>\r\n                <img src={image} />\r\n                <h1>Select Image</h1>\r\n                <input\r\n                  type=\"file\"\r\n                  name=\"myImage\"\r\n                  onChange={(event) => {\r\n                    if (event.target.files && event.target.files[0]) {\r\n                      let img = event.target.files[0]\r\n                      setImage(URL.createObjectURL(img))\r\n                    }\r\n                  }}\r\n                />\r\n                <input type=\"submit\" value=\"Create Metadata\" />\r\n              </form>\r\n            </>\r\n          ) : null}\r\n        </s.Container>\r\n      )}\r\n    </s.Screen>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import Web3 from 'web3'\r\nimport SmartContract from '../../contracts/SmartContract.json'\r\nimport { fetchData } from '../data/dataActions'\r\n\r\nconst connectRequest = () => {\r\n  return {\r\n    type: 'CONNECTION_REQUEST',\r\n  }\r\n}\r\n\r\nconst connectSuccess = (payload) => {\r\n  return {\r\n    type: 'CONNECTION_SUCCESS',\r\n    payload: payload,\r\n  }\r\n}\r\n\r\nconst connectFailed = (payload) => {\r\n  return {\r\n    type: 'CONNECTION_FAILED',\r\n    payload: payload,\r\n  }\r\n}\r\n\r\nconst updateAccountRequest = (payload) => {\r\n  return {\r\n    type: 'UPDATE_ACCOUNT',\r\n    payload: payload,\r\n  }\r\n}\r\n\r\nexport const connect = () => {\r\n  return async (dispatch) => {\r\n    dispatch(connectRequest())\r\n    if (window.ethereum) {\r\n      let web3 = new Web3(window.ethereum)\r\n      try {\r\n        const accounts = await window.ethereum.request({\r\n          method: 'eth_requestAccounts',\r\n        })\r\n        const networkId = await window.ethereum.request({\r\n          method: 'net_version',\r\n        })\r\n        console.log(accounts, networkId, SmartContract.networks)\r\n        if (networkId == 4) {\r\n          //rinkeby network id\r\n          const SmartContractObj = new web3.eth.Contract(\r\n            SmartContract.abi,\r\n            '0x9698B21eBc5A7355f2bE0ef2F2781dE0E54f93f0', //contract address\r\n          )\r\n          dispatch(\r\n            connectSuccess({\r\n              account: accounts[0],\r\n              smartContract: SmartContractObj,\r\n              web3: web3,\r\n            }),\r\n          )\r\n          window.ethereum.on('accountsChanged', (accounts) => {\r\n            dispatch(updateAccount(accounts[0]))\r\n          })\r\n          window.ethereum.on('chainChanged', () => {\r\n            window.location.reload()\r\n          })\r\n        } else {\r\n          dispatch(connectFailed('Change network to Rinkeby.'))\r\n        }\r\n      } catch (err) {\r\n        dispatch(connectFailed('Something went wrong.'))\r\n      }\r\n    } else {\r\n      dispatch(connectFailed('Install Metamask.'))\r\n    }\r\n  }\r\n}\r\n\r\nexport const updateAccount = (account) => {\r\n  return async (dispatch) => {\r\n    dispatch(updateAccountRequest({ account: account }))\r\n    dispatch(fetchData(account))\r\n  }\r\n}\r\n","import styled from \"styled-components\";\r\n\r\n// Used for wrapping a page component\r\nexport const Screen = styled.div`\r\n  background-color: var(--dark-grey);\r\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\r\n  background-size: cover;\r\n  background-position: center;\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerXSmall = styled.div`\r\n  height: 8px;\r\n  width: 8px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerSmall = styled.div`\r\n  height: 16px;\r\n  width: 16px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerMedium = styled.div`\r\n  height: 24px;\r\n  width: 24px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerLarge = styled.div`\r\n  height: 32px;\r\n  width: 32px;\r\n`;\r\n\r\n// Used for providing a wrapper around a component\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex: ${({ flex }) => (flex ? flex : 0)};\r\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\r\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\r\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\r\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\r\n  width: 100%;\r\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\r\n  background-size: cover;\r\n  background-position: center;\r\n`;\r\n\r\nexport const TextTitle = styled.p`\r\n  color: var(--white);\r\n  font-size: 20px;\r\n  font-weight: 500;\r\n`;\r\n\r\nexport const TextSubTitle = styled.p`\r\n  color: var(--white);\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n`;\r\n\r\nexport const TextDescription = styled.p`\r\n  color: var(--white);\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n`;\r\n\r\nexport const StyledClickable = styled.div`\r\n  :active {\r\n    opacity: 0.6;\r\n  }\r\n`;\r\n","var NFTUris = [\r\n  'https://ipfs.infura.io/ipfs/QmQB7sDzF6mAHiRy5p6rMdWxrF6nAewUXEhcvbrV2iirXP',\r\n  'https://ipfs.infura.io/ipfs/QmcLLNzSsTvbNCxjNPSaMXDSFLSUWqgHPoGoeJXHaqjypp',\r\n  'https://ipfs.infura.io/ipfs/QmXjA3UtduY46XY42DkRpg2Hk2PM3AkhCqnLt4fJy2AVvH',\r\n  'https://ipfs.infura.io/ipfs/QmYb5gzgogXHteHBPP1DPopRNYp7NtG8uFJyMqkhst2nnr',\r\n  'https://ipfs.infura.io/ipfs/QmUriC1YwV5G2bTo7Z1jYKDvhYYwG2vDpCmnmpL5s9hzcR',\r\n  'https://ipfs.infura.io/ipfs/QmRDB9HqqKcagFpyFixSfggiYQ6DdoT6azYxPVSbcd3n1Q',\r\n  'https://ipfs.infura.io/ipfs/QmVTchoXU2HrohrRBhG8fTDaqzwHstoizUULf68BaX9aqJ',\r\n  'https://ipfs.infura.io/ipfs/QmYYqY2TRsHfnVxxPJiCL63YUw5DbqZnKeZ34E3Min9uXW',\r\n  'https://ipfs.infura.io/ipfs/QmNa8qCQCH7goGDYHd2MXUc9S35Ms83hoRiQHyPCu7Phzs',\r\n  'https://ipfs.infura.io/ipfs/QmbSUEkyNScTM39wieh88ZZdLvbtsyWqRsJmX2vYhG1pxK',\r\n  'https://ipfs.infura.io/ipfs/QmaqmVN9YWucLXP2kV2A3a4ciKFLVkc3GZpDGgbd4chhNw',\r\n  'https://ipfs.infura.io/ipfs/QmWkFg8TYUjUGUzZiwCm2NQDMuuABjtGz9wixjWNPrgcve',\r\n  'https://ipfs.infura.io/ipfs/QmPA6ozuystokTnNw1jagMFFiPmRxnmKYp17p7g1sdY8gm',\r\n  'https://ipfs.infura.io/ipfs/QmW2mpbG3teMwu2BqJGGDSgHKCpzxPQWntDqGYoENw9aAY',\r\n  'https://ipfs.infura.io/ipfs/QmQNmPQwNydZ834qACUwfnwEXJoRPoG45J4tGWZsVHu1Sv',\r\n  'https://ipfs.infura.io/ipfs/QmdrC11RiFWC1EiDAbLykEZ6Hb39BaDQWwEZDih7JbMgiX',\r\n  'https://ipfs.infura.io/ipfs/Qme1uKMSGm16qJh3XxrLsz6MXNqpSDuMycEe3CqBuugQAi',\r\n  'https://ipfs.infura.io/ipfs/QmXAQPZBN7WEVMn4xthau4d2shZyaR3k9yRcdKpGr5CGEY',\r\n  'https://ipfs.infura.io/ipfs/QmesFJ6q6LEZbTh45VowbYYE6NgonzaQgiLq5xCf3x5F2Z',\r\n  'https://ipfs.infura.io/ipfs/QmYUScjzwSNLK4ofSfhxK23SRWfxQYc6ahKAgUZs7ra2vT',\r\n  'https://ipfs.infura.io/ipfs/QmZdRNgYRzc1TLNKnLF1cDgv5RbEHLoP77JZzAt8Q3wNMf',\r\n  'https://ipfs.infura.io/ipfs/QmbcRy5m3fLeTRvWhK3j41WTuyWG2qfKetVKcrTXQrtLu4',\r\n  'https://ipfs.infura.io/ipfs/QmdD28wJ5U5nrAKSmXf4g8zmxFH9zMieMx6f7VNeWrLS2t',\r\n  'https://ipfs.infura.io/ipfs/QmcFPpYGobYUm2d6quwcoKkiBviYoz14CWyD3HRzcognJd',\r\n  'https://ipfs.infura.io/ipfs/QmbPjQ3dCmfyhxenbgJVgmcuPdXG6MsMSzZKfhQX2RQuLW',\r\n  'https://ipfs.infura.io/ipfs/QmcdALheUkzx1h9G4eDSXMdU87vhvfkkFNjHPhXjz63fwZ',\r\n  'https://ipfs.infura.io/ipfs/QmNoAGhjWTm1nAxBHteF2Ckt17EHZA1g9mtwNXykxm8D26',\r\n  'https://ipfs.infura.io/ipfs/QmRHPduigqsQYZT2jqiLE1Ltsr3bE1HsBQwhx263wKck17',\r\n  'https://ipfs.infura.io/ipfs/QmeF5VchgaRvPav7UCzRZKxApEdrpwAYrFJWAybcccVqZA',\r\n  'https://ipfs.infura.io/ipfs/QmewhvM6Ji7gr1gbaqir5oySFdtEC5gFvTRfmgFVdnQUwW',\r\n]\r\nmodule.exports = { NFTUris }\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport store from \"./redux/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"./styles/reset.css\";\r\nimport \"./styles/theme.css\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}